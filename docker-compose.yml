services:
  # Application service
  app:
    container_name: sns-api
    image: sns-feed-api:${BUILD_TARGET:-dev}
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-development}
    env_file:
      - .env.${BUILD_TARGET:-development}
    environment:
      - DATABASE_URL=mysql://${DB_USER}:${DB_PASSWORD}@mysql:${DB_PORT}/${DB_NAME}
    ports:
      - "${APP_PORT:-5656}:${APP_PORT:-5656}"
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - sns-network
    restart: unless-stopped

  # MySQL Database service
  mysql:
    container_name: sns-mysql
    image: mysql:8.0
    ports:
      - "${DB_PORT:-3309}:${DB_PORT:-3309}"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_TCP_PORT=${DB_PORT}
    command: >
      --port=${DB_PORT}
      --init-file=/docker-entrypoint-initdb.d/init.sql
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - sns-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


volumes:
  mysql_data:
    driver: local

networks:
  sns-network:
    driver: bridge